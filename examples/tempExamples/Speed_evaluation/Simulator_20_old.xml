<?xml version="1.0" encoding="UTF-8" standalone="no"?><beast beautitemplate='Standard' beautistatus='' namespace="beast.core:beast.evolution.alignment:beast.evolution.tree.coalescent:beast.core.util:beast.evolution.nuc:beast.evolution.operators:beast.evolution.sitemodel
:beast.evolution.substitutionmodel:beast.evolution.likelihood:beast.core.parameter:beast.evolution.tree.coalescent:multitypetree.operators:multitypetree.util:master.beast:master.conditions
:master.beast:master.conditions:master.model:master.postprocessors:master.outputs:master" version="2.0">

	<map name="Beta">beast.math.distributions.Beta</map>
	<map name="Exponential">beast.math.distributions.Exponential</map>
	<map name="InverseGamma">beast.math.distributions.InverseGamma</map>
	<map name="LogNormal">beast.math.distributions.LogNormalDistributionModel</map>
	<map name="Gamma">beast.math.distributions.Gamma</map>
	<map name="Uniform">beast.math.distributions.Uniform</map>
	<map name="prior">beast.math.distributions.Prior</map>
	<map name="LaplaceDistribution">beast.math.distributions.LaplaceDistribution</map>
	<map name="OneOnX">beast.math.distributions.OneOnX</map>
	<map name="Normal">beast.math.distributions.Normal</map>

	<tree spec='BeastTreeFromMaster' id="tree"
		  samplePopulationSizes="true"
		  nSamples="1"
		  reverseTime="false">

		<model spec='Model' id='model'>

			<populationType spec='PopulationType' typeName='X' dim='2' id='X'/>
			<populationType spec='PopulationType' typeName='S' dim='2' id='S'/>

			<reactionGroup spec='ReactionGroup' reactionGroupName='Birth'>
				<reaction spec='Reaction' rate="0.4">
					X[0] -> 2X[0]
				</reaction>
				<reaction spec='Reaction' rate="0.3">
					X[1] -> 2X[1]
				</reaction>
			</reactionGroup>

			<reactionGroup spec='ReactionGroup' reactionGroupName='Death'>
				<reaction spec='Reaction' rate="0.27">
					X[0] -> 0
				</reaction>
				<reaction spec='Reaction' rate="0.17">
					X[1] -> 0
				</reaction>
			</reactionGroup>

			<reactionGroup spec='ReactionGroup' reactionGroupName='Sampling'>
				<reaction spec='Reaction'  rate="0.03">
					X[0]:1 -> S[0]:1
				</reaction>
				<reaction spec='Reaction'  rate="0.03">
					X[1]:1 -> S[1]:1
				</reaction>
			</reactionGroup>

			<reactionGroup spec='ReactionGroup' reactionGroupName="Migration">
				<reaction spec='Reaction' rate="0.03">
					X[0] -> X[1]
				</reaction>
				<reaction spec='Reaction' rate="0.03">
					X[1] -> X[0]
				</reaction>
			</reactionGroup>
		</model>

		<initialState spec='InitState'>
			<lineageSeed spec='Individual'>
				<population spec='Population' type="@X" location="0"/>
			</lineageSeed>
		</initialState>

		<!-- Abort simulation if number of infected individuals drops to zero -->
		<lineageEndCondition spec='LineageEndCondition' nLineages="0" isRejection="true">
			<population spec='Population' type='@X' location="0" />
			<population spec='Population' type='@X' location="1" />
		</lineageEndCondition>

		<!-- Finish simulation when n samples have been generated. -->
		<lineageEndCondition spec='LineageEndCondition' nLineages="20" isRejection="false">
			<population spec='Population' type='@S' location="0" />
			<population spec='Population' type='@S' location="1" />
		</lineageEndCondition>

		<!-- Keep only sampled lineages. -->
		<inheritancePostProcessor spec='LineageFilter' populationName="S"/>

		<!-- Trim off post-sampling lineages. -->
		<inheritancePostProcessor spec='LineageFilter' populationName="S"
								  leavesOnly="true" discard="true"/>

		<!--<output spec='NewickOutput' fileName='$(filebase)_$(seed).newick'/>-->
		<!--<output spec='NexusOutput' fileName='$(filebase)_$(seed).nexus'/>-->
		<!--output spec='JsonOutput' fileName='BDMUC_treeSimAnaLyzer_sim_3demes.json'/-->

	</tree>

	<distribution spec="beast.evolution.speciation.BirthDeathMigrationModelUncoloured" id="treePrior" tree="@tree"
				  stateNumber="2" typeLabel="location" conditionOnSurvival="true">
		<migrationMatrix spec="RealParameter" id="rateMatrix" value=".01" dimension="2" lower="0" upper="10"/>
		<parameter name="frequencies" id="geo-frequencies" value="0.5 0.5" lower="0." upper="1."/>
		<parameter name="R0" id="R0" lower="0" dimension="2" value="2." upper="10"/>
		<parameter name="becomeUninfectiousRate" id="becomeUninfectiousRate" value="0.25" lower="0" dimension="2" upper="10"/>
		<parameter name="samplingProportion" id="samplingProportion" value="0.1 0.15" lower="0" dimension="2"  upper="1."/>	<!-- 0.166667 0.333333 0.333333 -->
	</distribution>

	<run chainLength="1000000" id="mcmc" spec="MCMC" storeEvery="-1" numInitializationAttempts="100">

		<state id="state" storeEvery="-1">
			<stateNode idref="R0"/>
			<stateNode idref="becomeUninfectiousRate"/>
			<stateNode idref="samplingProportion"/>
			<stateNode idref="rateMatrix"/>
			<stateNode idref="geo-frequencies"/>
		</state>

		<distribution id="posterior" spec="util.CompoundDistribution">
			<distribution id="prior" spec="util.CompoundDistribution">
				<distribution idref="treePrior"/>
				<prior id="R0Prior" name="distribution" x="@R0">
					<LogNormal name="distr" M="0." S="1.25"/>
				</prior>
				<prior id="becomeUninfectiousRatePrior" name="distribution" x="@becomeUninfectiousRate">
					<LogNormal name="distr" M="-1" S="1.25"/>
				</prior>
				<prior id="migPrior" name="distribution" x="@rateMatrix">
					<LogNormal name="distr" M="-3" S="1.25"/>
				</prior>
			</distribution>
		</distribution>

		<operator id='R0Operator' spec='ScaleOperator' scaleFactor=".85" weight="6" parameter="@R0"/>
		<operator id='bsOperator' spec='ScaleOperator' scaleFactor=".9" weight="6" parameter="@becomeUninfectiousRate" scaleAll="false"/>
		<operator id='rateMatrixOperator' spec='ScaleOperator' scaleFactor=".75" weight="6" parameter="@rateMatrix"/>
		<operator id="updown1" spec="UpDownOperator" scaleFactor=".9" weight="6" up="@R0" down="@becomeUninfectiousRate"/>
		<operator id="updown2" spec="UpDownOperator" scaleFactor=".9" weight="6" up="@rateMatrix" down="@R0"/>
		<operator id="updown3" spec="UpDownOperator" scaleFactor=".9" weight="6" up="@rateMatrix" down="@becomeUninfectiousRate"/>

		<operator spec="DeltaExchangeOperator" parameter="@geo-frequencies" delta="0.2" weight=".1"/>

		<logger fileName="$(filebase)_$(seed).log" id="log" logEvery="100000" mode="autodetect" >
			<distribution idref="posterior" name="log"/>
			<log idref="treePrior"/>
			<log idref="R0"/>
			<log idref="becomeUninfectiousRate"/>
			<log idref="samplingProportion"/>
			<log idref="rateMatrix"/>
			<log idref="geo-frequencies"/>
		</logger>

		<logger id="screenlog" logEvery="100000" mode="autodetect">
			<distribution idref="posterior" name="log"/>
			<log arg="@posterior" id="ESS.0" spec="util.ESS"/>
			<log idref="treePrior"/>
			<log idref="R0"/>
			<log idref="becomeUninfectiousRate"/>
			<log idref="rateMatrix"/>
		</logger>
	</run>

</beast>
